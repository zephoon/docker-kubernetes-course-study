apiVersion: v1
kind: Secret
metadata:
  name: ca-secret
type: Opaque
immutable: true
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZCVENDQXUyZ0F3SUJBZ0lVRmYwU0dxem5LYWdaS3M3NTYxMllRcDliUitZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0VqRVFNQTRHQTFVRUF3d0hlbVZ3YUc5dmJqQWVGdzB5TlRBME1qY3dNREF4TVRoYUZ3MHlOakEwTVRndwpNREF4TVRoYU1CSXhFREFPQmdOVkJBTU1CM3BsY0dodmIyNHdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDCkR3QXdnZ0lLQW9JQ0FRQ2tpamc3ME9EUlA5Y09EK2xYMC82ano2U1lLTEd0bm5Kek1vN09NWkxldW4zWVBKY1gKNWU5UG5YNW1URTRobVRJVm1CRHJ1NUo0ZTRtWFh0aDZ5Q2RnZ2VJSmFyaXhZTklJL1dIdlg4MEgwOUtNZmtpOQpKRzNQNEJmc3p3MGNnR2RDS21qdXQvZmh5TGtoNHp0cVdtOXNlRnl3ekxLZlEyN3lCZTdXSzNOTVhXWndPU0gwCnVHeUsxMFlyUFUrbUFqZ1NYbytmdGl2RXhESU1zQW8zKytpNDVLaHY5TEQ1RHpLVlpzeTlJeWh2WGR0YlVGM20Kc0g1cHdvbU5LQ0JLU1VqQnNmMFFJWjBGcVlHS2U2ZmkxN0p6cEJGZVlCa043SnkzcjlLaS9mUmRJdC9DdzhuUAo3UGVOdlBPREU0QWNrQ0JrVklxeTYwZWRxSXB6d1kySVR1dG95dEZkNFZ2TGdjT2ZHWkhGQ3pOZGVqWHJqWlp4CkFnN1lQNFlETFRjM2FPUmoxRHlPTUUrengwYnNidHFWS2pEWkFDZkN6dDB3WVJaRHl3UlY0VU9UZkdrclBUNFMKRFd0Tlh6b0NrNWxCRlRMMnhtL296dWZuRGR6V2NKaVdWYUh2VmVoanRhaDJvWXB4bE1ramtwNGUyaHlyY3duVgpGbnZPYk9QeEZPQ3BsbGFDUXlDR2p5NUhLQ2RYYzlmV0VpNVMwTzB6ZENPSlJscXhJV2ZHWmlSbDl3U2JzZEQ0ClpjaVovUUdWb01vc0JNOThXQ25KSVB2MXJjczlpakYwZlR4V0g4OEtYY3cyd0pZdTJlL0lWQWt5T0lSSlhkckEKMzRUM0dNd1FCRkhzVmlNT0k2RjFIYUkvaXhOL08yazNiTWdFMEJDVDcwOFNSS0ljWFQ0a3Z0YUJzd0lEQVFBQgpvMU13VVRBZEJnTlZIUTRFRmdRVVlCU2JqL0UxTHFleWZ4TEdnYXR2UlI4TmMvSXdId1lEVlIwakJCZ3dGb0FVCllCU2JqL0UxTHFleWZ4TEdnYXR2UlI4TmMvSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEIKQVFzRkFBT0NBZ0VBZFZZWGZRUHgyZ1JRRHpvMVdUUEoycFB1bThuVjhhbXdhY1Z5MGppWllpZE1aWHB6bVM5cApiZklXdHphcUxBbXVQd3ZWMUxZd29pNzlUeVYvNm9kY25abjRSc0psdXZIN3lJVDYvSVJCakZ0UnkvaWNqQUQ0Cm45VnZaM1FjYXlmTG90KzVPZnMxY0pRdlNzVSs5UGxXckxLbzVRamlnZ2MwckRXNzlPODl4SGpMdXRrcGFma1AKRnBiZlkwbnVyQWNGdDY2TzE1c21GNzZaaTBvQmxuNVBRMEQ2UFg3SVE5eSt5VlZJbFdabXNRa0tRNnpnVEprdApvRmFuZGdUMDJ4bmVSVFYvdkZiYUcyMHZxL0NzN0szcUNKdUJKbVR5aWZ3TVpKSGVXME5jWEFvelJVTmE2bTgvCjBCL2FVNEFSeCthbVV0WGdnTGpWRXdJaHdUWmQ5NklPRWFYeWhVRnVsclM1UXNKWms1V3dKVWxXaks5SkNKVUEKWVIyNjBLVVphbWt5QkxFdS9OOXFxMXg4cGhIQnU1K21VMUcyVS9XSThhZmc1eUdQb0RNcFBrLytvbXI4ZGxBRgorMDVOMmg3STA5ME1kOEZZU0dYNjRNUUdGb01aWHliZjRKenVGWWlWQkNEaUZzZ1h1OE9jdW02Z2JxSkd0QTc1Clp3Rm85R0UyTEtDY1lFZ05sUlZrZE9MS3BIY3Q0MEM4SEcxekZLNXg2WjQ4NllHK0d2OXhCeXdQbEtkSEpkL0gKUm9SdDBobUNFRnlYOTg3dVBmZjZnWHg0cWRJWkxDZ1R5WW5obEx6YU5vdHZEVWVYY3MxSEtQY3NMc1N5dVZKZApNRkY3TklYLzA1VFZhZUZzc2xsOStGN3NrMWtMRjVFLzJhZnZlNW1LbzJQakRYemd0WnpoSFRJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    # nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # kubernetes.io/ingress.allow-http: "false"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    nginx.ingress.kubernetes.io/auth-tls-secret: app-07/ca-secret
spec:
  ingressClassName: nginx-internal # nginx
  tls:
  - hosts:
    - webapi-dns.internal.webapi
    secretName: tls-secret-csi-app-07
  rules:
  - host: webapi-dns.internal.webapi
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-svc
            port:
              number: 80
